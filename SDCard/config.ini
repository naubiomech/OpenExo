;board information
; ALL FIELDS SHOULD BE LESS THAN 25 CHAR
[Board]
	name = AK_Board
	version = 0.5.1

[Exo]
	name = bilateralAnkle
    
[Battery]
    name = dumb
    ; describes the type of battery used, values: smart(inspired energy), dumb (simple lipo)

[test]
	sides = right
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = 0
	knee = AK60v1.1
	ankle = 0
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = 0
	kneeDefaultController = elbowMinMax
	ankleDefaultController = 0
    

	; flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = 0
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = both
	; flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = 0
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = right
	; flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0

	; determine the range of motion at each joint in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 100
	rightAnkleRoM = 100


[bilateralHipAnkle]
	sides = bilateral
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = AK60v1.1
	knee = 0
	ankle = AK60v1.1
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = 0
	kneeDefaultController = 0
	ankleDefaultController = ptbGeneral
    
    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = right
	kneeFlipDir = 0
	ankleFlipDir = right
    
[bilateralHip]
	sides = bilateral
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = AK60v1.1
	knee = 0
	ankle = 0
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
	; values 1, 2, 3, 4.5,
    hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = ptbGeneral
	kneeDefaultController = 0
	ankleDefaultController = 0    

    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = right
	kneeFlipDir = 0
	ankleFlipDir = 0
    
[bilateralAnkle]
	sides = bilateral
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = 0
	knee = 0
	ankle = AK80
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis, ptbGeneral, calibrManager
	hipDefaultController = 0
	kneeDefaultController = 0
	ankleDefaultController = calibrManager
    
    
    	; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = 0
	kneeFlipDir = 0
	ankleFlipDir = 0
	
	
	; flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = 0
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = both
	; flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = 0
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = right
	; flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0

	; determine the range of motion at each joint in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 100
	rightAnkleRoM = 100
    
[leftHipAnkle]
	sides = left
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = AK60v1.1
	knee = 0
	ankle = AK60v1.1

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = bangBang
	kneeDefaultController = 0
	ankleDefaultController = PJMC  
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5

    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = right
	kneeFlipDir = 0
	ankleFlipDir = 0   

[rightHipAnkle]
	sides = right
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = AK60v1.1
	knee = 0
	ankle = AK60v1.1

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = bangBang
	kneeDefaultController = 0
	ankleDefaultController = PJMC    
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5  
    
    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = right
	kneeFlipDir = 0
	ankleFlipDir = 0
    
[leftHip]
	sides = left
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = AK60v1.1
	knee = 0
	ankle = 0

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = bangBang
	kneeDefaultController = 0
	ankleDefaultController = 0  
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5

    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = right
	kneeFlipDir = 0
	ankleFlipDir = 0   
    
[rightHip]
	sides = right
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = AK60v1.1
	knee = 0
	ankle = 0

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = bangBang
	kneeDefaultController = 0
	ankleDefaultController = 0  
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5

    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = right
	kneeFlipDir = 0
	ankleFlipDir = 0  
    
[leftAnkle]
	sides = left
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = 0
	knee = 0
	ankle = AK60v1.1

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = 0
	kneeDefaultController = 0
	ankleDefaultController = PJMC  
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5

    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = right
	kneeFlipDir = 0
	ankleFlipDir = right    

[rightAnkle]
	sides = right
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = 0
	knee = 0
	ankle = AK80

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = 0
	kneeDefaultController = 0
	ankleDefaultController = ptbGeneral    
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5  
    
    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = right
	kneeFlipDir = 0
	ankleFlipDir = right
	[rightKnee]
	sides = right
	;sides - left, right, bilateral

	;joints used and their motor name, 0 not used, ak60 and ak80 are the two CAN motors future motors or joints can be added.
    ; values 0(not used), AK60, AK80, AK60v1.1,AK60v1.1T,AK70
	hip = 0
	knee = AK80
	ankle = 0

	; the default controller, 0 off, other names can be added if you want to run without connecting to the GUI
	; Hip Controllers: zeroTorque, heelToe, extensionAngle, franksCollins, bangBang, lateStance, userDefined, sine, stasis, gaitPhase
	; Knee Controllers: zeroTorque, userDefined, sine, stasis
	; Ankle Controllers: zeroTorque, PJMC, zhangCollins, userDefined, sine, stasis
	hipDefaultController = 0
	kneeDefaultController = elbowMinMax
	ankleDefaultController = 0  
    
    ;joint gear ratio, velocity of driving member(motor)/velocity of the driven member (output shaft), assumes constant gearing ratio.  If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    ; This is for transmission gearing after the motor output shaft.  If the Motor has a built in gearing that should be part of the motor class.
    ; values 1, 2, 3, 4.5,
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5  
    
    ; filp direction for the torque and angles, 0 neither, left, right, both
	hipFlipDir = 0
	kneeFlipDir = right
	ankleFlipDir = 0